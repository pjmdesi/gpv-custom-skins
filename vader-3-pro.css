:root{
  --key-color: #d81cff;

  --d-pad-rotate-angle: 30deg;

  --d-pad-translate: 10px;
}

body {
  background: var(--key-color) !important;
}

.controller.active {
  background: center / 100% auto url(https://pjmdesi.github.io/gpv-custom-skins/Body-no-d-pad.png) no-repeat;
  perspective: 2000px;
}

.xbox .sticks {
  top: 161px;
  left: 139px;
}

.xbox .stick.left {
  background: center / 100% auto url(https://pjmdesi.github.io/gpv-custom-skins/Analog-L.png) no-repeat;
}

.xbox .stick.right {
  background: center / 100% auto url(https://pjmdesi.github.io/gpv-custom-skins/Analog-R.png) no-repeat;
  top: 119px;
}

.xbox .arrows {
  position: absolute;
  width: 229px;
  top: 130px;
  left: 260px;
}

.xbox .arrows .button-select,
.xbox .arrows .button-start {
  width: 49px;
  height: 45px;
  opacity: 1;
}

.xbox .abxy {
  width: 158px;
  top: 122px;
  left: 485px;
}

.xbox .button {
  
}

.xbox .dpad {
  width: 128px;
  height: 128px;
  top: 260px;
  left: 210px;

  background: center / 100% auto url(https://pjmdesi.github.io/gpv-custom-skins/D-Pad.png) no-repeat;
}

.xbox .dpad>span {
  display: none;
}

/* rotate3d(x, y, z, a) */
.xbox .dpad:has(.up.pressed) {
  transform: translate3d(0, calc( -1 * var(--d-pad-translate) ), -2px ) rotate3d(1, 0, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.up.pressed~.left.pressed) {
  transform: translate3d(calc( -1 * var(--d-pad-translate) ), calc( -1 * var(--d-pad-translate) ), -2px ) rotate3d(1, -1, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.left.pressed) {
  transform: translate3d(calc( -1 * var(--d-pad-translate) ), 0, -2px ) rotate3d(0, -1, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(down.pressed~.left.pressed) {
  transform: translate3d(calc( -1 * var(--d-pad-translate) ), var(--d-pad-translate), -2px ) rotate3d(-1, -1, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.down.pressed) {
  transform: translate3d(0, var(--d-pad-translate), -2px ) rotate3d(-1, 0, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.down.pressed~.right.pressed) {
  transform: translate3d(var(--d-pad-translate), var(--d-pad-translate), -2px ) rotate3d(-1, 1, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.right.pressed) {
  transform: translate3d(var(--d-pad-translate), 0, -2px ) rotate3d(0, 1, 0, var(--d-pad-rotate-angle));
}

.xbox .dpad:has(.up.pressed~.right.pressed) {
  transform: translate3d(var(--d-pad-translate), calc( -1 * var(--d-pad-translate) ), -2px ) rotate3d(1, 1, 0, var(--d-pad-rotate-angle));
}
